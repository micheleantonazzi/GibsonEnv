name: BuildManylinux20102014

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]

jobs:
  build_wheels:
    name: Build manylinux2010-2014 wheels
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        manylinux_image: [manylinux2010, manylinux2014]
        python_version: ['2.7', '3.6', '3.7', '3.8', '3.9', '3.10']
        exclude:
          - manylinux_image: manylinux2010
            python_version: '3.9'
          - manylinux_image: manylinux2010
            python_version: '3.10'
    container: micheleantonazzi/manylinux-extended:${{ matrix.manylinux_image }}_x86_64_extended_0.7.1
    steps:
      - run: |
          docker run micheleantonazzi/manylinux-extended:${{ matrix.manylinux_image }}_x86_64_extended_0.7.1 bash
          # Remove existing directory if it exists
          if [ -d "repository" ]; then
            rm -rf "repository"
          fi

          # Clone the repository
          git clone "https://github.com/${{ github.repository }}" "GibsonEnv" -- recursive

          # Navigate to the repository directory
          cd "repository"

          # Checkout the current branch
          git checkout "${{ github.ref }}"

          # Optionally, you can also fetch the latest commits
          git pull origin "${{ github.ref }}"
        
          cd ..
          /bin/bash GibsonEnv/build_scripts/${{ matrix.manylinux_image }}/configure_linux.sh
      
          export CC=/usr/lib64/openmpi/bin/mpicc
          pip${{ matrix.python_version }} install wheel
          pip${{ matrix.python_version }} install -r build_scripts/${{ matrix.manylinux_image }}/requirements.txt
          python${{ matrix.python_version }} setup.py sdist
      
          export CC=/usr/lib64/openmpi/bin/mpicc
          pip${{ matrix.python_version }} install -e .
          python${{ matrix.python_version }} setup.py bdist_wheel
          auditwheel repair dist/gibson-*-cp*
      - name: Upload to pypi
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          docker run micheleantonazzi/manylinux-extended:${{ matrix.manylinux_image }}_x86_64_extended_0.7.1 bash
          pip${{ matrix.python_version }} install twine
          python${{ matrix.python_version }} -m twine upload dist/gibson*.tar.gz --skip-existing
          python${{ matrix.python_version }} -m twine upload wheelhouse/* --skip-existing