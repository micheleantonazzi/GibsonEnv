name: BuildManylinux20102014

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]

jobs:
  build_wheels:
    name: Build manylinux2010-2014 wheels
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        manylinux_image: [manylinux2010, manylinux2014]
        python_version: ['2.7', '3.6', '3.7', '3.8', '3.9', '3.10']
        exclude:
          - manylinux_image: manylinux2010
            python_version: '3.9'
          - manylinux_image: manylinux2010
            python_version: '3.10'
    container: micheleantonazzi/manylinux-extended:${{ matrix.manylinux_image }}_x86_64_extended_0.7.1
    steps:
      - name: Check disk space
        run: df . -h
      - name: Free disk space
        run: |
          sudo rm -rf \
            /usr/share/dotnet /usr/local/lib/android /opt/ghc \
            /usr/local/share/powershell /usr/share/swift /usr/local/.ghcup \
            /usr/lib/jvm || true
          echo "some directories deleted"
          sudo apt install aptitude -y >/dev/null 2>&1
          sudo aptitude purge aria2 ansible azure-cli shellcheck rpm xorriso zsync \
            esl-erlang firefox gfortran-8 gfortran-9 google-chrome-stable \
            google-cloud-sdk imagemagick \
            libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
            mercurial apt-transport-https mono-complete libmysqlclient \
            unixodbc-dev yarn chrpath libssl-dev libxft-dev \
            libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev \
            snmp pollinate libpq-dev postgresql-client powershell ruby-full \
            sphinxsearch subversion mongodb-org azure-cli microsoft-edge-stable \
            -y -f >/dev/null 2>&1
          sudo apt-get autoremove -y >/dev/null 2>&1
          sudo apt-get autoclean -y >/dev/null 2>&1
          echo "some packages purged"
      - name: Check disk space
        run: |
          sudo dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -nr | head
          df . -h
          sudo du /usr/ -hx -d 4 --threshold=1G | sort -hr | head
      - uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: Setup pip cache
        if: ${{ matrix.manylinux_image == 'manylinux2014' }}
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip/wheels
          key: ${{ matrix.manylinux_image }}-${{ matrix.python_version }}-${{ hashFiles('**/requirements.txt') }}
      - name: Configure system
        run: |
          cd ..
          /bin/bash GibsonEnv/build_scripts/${{ matrix.manylinux_image }}/configure_linux.sh
      - name: Build sdist
        run: |
          export CC=/usr/lib64/openmpi/bin/mpicc
          pip${{ matrix.python_version }} install wheel
          pip${{ matrix.python_version }} install -r build_scripts/${{ matrix.manylinux_image }}/requirements.txt
          python${{ matrix.python_version }} setup.py sdist
      - name: Build bdists
        run: |
          export CC=/usr/lib64/openmpi/bin/mpicc
          pip${{ matrix.python_version }} install -e .
          python${{ matrix.python_version }} setup.py bdist_wheel
          auditwheel repair dist/gibson-*-cp*
      - name: Upload to pypi
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          pip${{ matrix.python_version }} install twine
          python${{ matrix.python_version }} -m twine upload dist/gibson*.tar.gz --skip-existing
          python${{ matrix.python_version }} -m twine upload wheelhouse/* --skip-existing